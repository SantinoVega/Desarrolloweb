
---------------------------------------------------------


INICIAR HOMESTEAD CON VAGRANT (MAQUINA VIRTUAL)


-Dentro de la carpeta donde tenemos instalado Homestead
-Revisamos el estado global de vagrant para saber si ya tenemos iniciada alguna maquina virtual.


#vagrant global-status
-Nos muestra si existe alguna maquina virtual

#vagrant up
-Si existe una maquina virtual la inicia, sino la crea e inicia.
-Si tenemos mas de una maquina virtual se debe especificar agregando el ID

#vagrant reload --provision
-Si modificamos la configuracion de Homestead.yaml necesitaremos recargar la maquina con la nueva configuracion

#vagrant halt
-Apaga la maquina virtual

#vagrant suspend
-Suspende la maquina virtual y guarda el estado actual.


-----------------------------------------------------------


CREAR Y SUBIR UN REPOCITORIO DESDE 0. (Proyecto laravel ya existe)


-Primero se crea un repositorio vacio en GitHub.com
-Debemos tener un proyecto (Laravel) ya creado.
-En terminal navegamos hasta la carpeta del proyecto. y tecleamos

# git init		
-Crea repositorio vacio

# git add .
-Agrega todos los archivos de la carpeta actual al repositorio local (stage)

#git remote add origin https://github.com/rutaDelProyecto
-Se agrega la direccion web a donde se enviara nuestro proyecto.(Este paso se hace solo 1 vez por proyecto).

#git commit -m "mensaje descripticvo"
-Confirma los cambios en el repositorio local

#git push -u origin master
-Sube las modificaciones al repositorio remoto


--------------------------------------------------------------


ACTUALIZAR REPOSITORIO EN DESARROLLO.


# git add .		
-Agrega todos los archivos de la carpeta actual al repositorio local (stage)

#git commit -m "mensaje descripticvo"
-Confirma los cambios en el repositorio local

#git push -u origin master
-Sube las modificaciones al repositorio remoto


---------------------------------------------------------------


BORRAR VISTAS DE LA CACHE DEL PROYECTO


-Laravel guarda las paginas previamente cargadas en la cache para agilizar la ejecucion, por lo que cuando recargamos una pagina sino a sufrido alguna modificacion la toma de la cache. para eliminar las vistas que estan almacenadas en la cache y asi garantizar que la vista que se muestra es lo que se ha programado


# php artisan view:clear
-Limpia la cache de las vistas en el proyecto actual.
-Debemos estar en la carpeta del proyecto.


--------------------------------------------------------------


CREAR UN ALIAS


-En este caso se muestra como crear un alias para realizar Test
-En la carpeta dentro del proyecto /vendor/bin/phpunit

# alias t=vendor/bin/phpunit
#t
-Se crea un alias "t", que al ser ejecutado realiza los Test del proyecto.

